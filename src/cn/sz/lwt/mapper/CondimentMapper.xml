<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.sz.lwt.mapper.CondimentMapper">
  <resultMap id="BaseResultMap" type="cn.sz.lwt.pojo.Condiment">
    <id column="cid" jdbcType="INTEGER" property="cid" />
    <result column="ccondiment" jdbcType="VARCHAR" property="ccondiment" />
    <result column="cproduct" jdbcType="VARCHAR" property="cproduct" />
    <result column="cspecifications" jdbcType="DOUBLE" property="cspecifications" />
    <result column="cinterval" jdbcType="INTEGER" property="cinterval" />
    <result column="cwave" jdbcType="VARCHAR" property="cwave" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    cid, ccondiment, cproduct, cspecifications, cinterval, cwave
  </sql>
  <select id="selectByExample" parameterType="cn.sz.lwt.pojo.CondimentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from condiment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from condiment
    where cid = #{cid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from condiment
    where cid = #{cid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.sz.lwt.pojo.CondimentExample">
    delete from condiment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.sz.lwt.pojo.Condiment">
    insert into condiment (cid, ccondiment, cproduct, 
      cspecifications, cinterval, cwave
      )
    values (#{cid,jdbcType=INTEGER}, #{ccondiment,jdbcType=VARCHAR}, #{cproduct,jdbcType=VARCHAR}, 
      #{cspecifications,jdbcType=DOUBLE}, #{cinterval,jdbcType=INTEGER}, #{cwave,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.sz.lwt.pojo.Condiment">
    insert into condiment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cid != null">
        cid,
      </if>
      <if test="ccondiment != null">
        ccondiment,
      </if>
      <if test="cproduct != null">
        cproduct,
      </if>
      <if test="cspecifications != null">
        cspecifications,
      </if>
      <if test="cinterval != null">
        cinterval,
      </if>
      <if test="cwave != null">
        cwave,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cid != null">
        #{cid,jdbcType=INTEGER},
      </if>
      <if test="ccondiment != null">
        #{ccondiment,jdbcType=VARCHAR},
      </if>
      <if test="cproduct != null">
        #{cproduct,jdbcType=VARCHAR},
      </if>
      <if test="cspecifications != null">
        #{cspecifications,jdbcType=DOUBLE},
      </if>
      <if test="cinterval != null">
        #{cinterval,jdbcType=INTEGER},
      </if>
      <if test="cwave != null">
        #{cwave,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.sz.lwt.pojo.CondimentExample" resultType="java.lang.Long">
    select count(*) from condiment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update condiment
    <set>
      <if test="record.cid != null">
        cid = #{record.cid,jdbcType=INTEGER},
      </if>
      <if test="record.ccondiment != null">
        ccondiment = #{record.ccondiment,jdbcType=VARCHAR},
      </if>
      <if test="record.cproduct != null">
        cproduct = #{record.cproduct,jdbcType=VARCHAR},
      </if>
      <if test="record.cspecifications != null">
        cspecifications = #{record.cspecifications,jdbcType=DOUBLE},
      </if>
      <if test="record.cinterval != null">
        cinterval = #{record.cinterval,jdbcType=INTEGER},
      </if>
      <if test="record.cwave != null">
        cwave = #{record.cwave,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update condiment
    set cid = #{record.cid,jdbcType=INTEGER},
      ccondiment = #{record.ccondiment,jdbcType=VARCHAR},
      cproduct = #{record.cproduct,jdbcType=VARCHAR},
      cspecifications = #{record.cspecifications,jdbcType=DOUBLE},
      cinterval = #{record.cinterval,jdbcType=INTEGER},
      cwave = #{record.cwave,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.sz.lwt.pojo.Condiment">
    update condiment
    <set>
      <if test="ccondiment != null">
        ccondiment = #{ccondiment,jdbcType=VARCHAR},
      </if>
      <if test="cproduct != null">
        cproduct = #{cproduct,jdbcType=VARCHAR},
      </if>
      <if test="cspecifications != null">
        cspecifications = #{cspecifications,jdbcType=DOUBLE},
      </if>
      <if test="cinterval != null">
        cinterval = #{cinterval,jdbcType=INTEGER},
      </if>
      <if test="cwave != null">
        cwave = #{cwave,jdbcType=VARCHAR},
      </if>
    </set>
    where cid = #{cid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.sz.lwt.pojo.Condiment">
    update condiment
    set ccondiment = #{ccondiment,jdbcType=VARCHAR},
      cproduct = #{cproduct,jdbcType=VARCHAR},
      cspecifications = #{cspecifications,jdbcType=DOUBLE},
      cinterval = #{cinterval,jdbcType=INTEGER},
      cwave = #{cwave,jdbcType=VARCHAR}
    where cid = #{cid,jdbcType=INTEGER}
  </update>
</mapper>